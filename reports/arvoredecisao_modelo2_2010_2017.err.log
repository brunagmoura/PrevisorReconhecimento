Traceback (most recent call last):
  File "/Users/brunamoura/PrevisorReconhecimento/.venv/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/brunamoura/PrevisorReconhecimento/.venv/lib/python3.9/site-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/brunamoura/PrevisorReconhecimento/.venv/lib/python3.9/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
  File "/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/asyncio/base_events.py", line 642, in run_until_complete
    return future.result()
  File "/Users/brunamoura/PrevisorReconhecimento/.venv/lib/python3.9/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/Users/brunamoura/PrevisorReconhecimento/.venv/lib/python3.9/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/brunamoura/PrevisorReconhecimento/.venv/lib/python3.9/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Importar bibliotecas
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.pipeline import Pipeline
from sklearn.tree import DecisionTreeClassifier
from sklearn.preprocessing import RobustScaler
from sklearn.metrics import recall_score, classification_report, make_scorer
from skopt import BayesSearchCV
import numpy as np
import warnings
import matplotlib.pyplot as plt
from sklearn.tree import plot_tree
from treeinterpreter import treeinterpreter as ti
from imblearn.over_sampling import SMOTE
from sklearn.feature_selection import SelectFromModel

#Estilizar conteÃºdo
warnings.filterwarnings('ignore')

#Estilizar conteÃºdo
warnings.filterwarnings('ignore')

pd.set_option('display.max_rows', None)
pd.set_option('display.max_columns', None)

def estilo_tabelas(df, max_altura='300px', casas_decimais=3):
    return (
        df.style.set_table_styles(
            [
                {'selector': 'thead th', 'props': [('font-size', '12px'), ('text-align', 'center'), ('border-bottom', '2px solid #007BFF')]},
                {'selector': 'td', 'props': [('font-size', '10px'), ('text-align', 'center'), ('max-height', '40px'), ('white-space', 'nowrap'), ('text-overflow', 'ellipsis'), ('overflow', 'hidden'), ('max-width', '100px')]},
                {'selector': 'tr:nth-child(odd)', 'props': [('background-color', '#ffffff')]},
                {'selector': 'table', 'props': [('width', '90%'), ('margin-left', 'auto'), ('margin-right', 'auto'), ('border-collapse', 'collapse')]},
                {'selector': 'td, th', 'props': [('border', '1px solid #666')]},
            ]
        ).set_properties(
            **{'border-color': 'darkgray', 'border-style': 'solid', 'border-width': '1px'}
        ).set_table_attributes(
            f'style="height:auto; overflow:auto; max-height:{max_altura}; display:block;"'  
        ).format(
            precision=casas_decimais  
        )
    )


object_columns = ['Protocolo_S2iD', 'Nome_Municipio', 'Sigla_UF', 'regiao',
                  'Setores CensitÃ¡rios', 'Status', 'DH_Descricao', 'DM_Descricao',
                  'DA_Descricao', 'DA_Polui/cont da Ã¡gua', 'DA_Polui/cont do ar',
                  'DA_Polui/cont do solo', 'DA_Dimi/exauri hÃ­drico',
                  "DA_IncÃªndi parques/APA's/APP's", 'PEPL_Descricao', 'PEPR_Descricao',
                  'Categoria', 'Grupo', 'Subgrupo', 'Tipo', 'Subtipo']

dtype = {col: 'object' for col in object_columns}

df_eventos_2010_2 = pd.read_csv(
    "https://raw.githubusercontent.com/brunagmoura/PrevisorReconhecimento/refs/heads/main/df_eventos_2010_2017_modelo2.csv",
    sep=';',
    decimal=',')

# Remover linhas com dados ausentes

df_eventos_2010_2 = df_eventos_2010_2.dropna()

estilo_tabelas(df_eventos_2010_2.head(5))

# Remover linhas com todos os dados informados = 0.

colunas_informados = [
    'DH_MORTOS', 'DH_FERIDOS', 'DH_ENFERMOS', 'DH_DESABRIGADOS', 'DH_DESALOJADOS', 
    'DH_DESAPARECIDOS', 'DH_OUTROS AFETADOS', 
    'DM_Uni Habita Danificadas', 'DM_Uni Habita Destruidas', 'DM_Uni Habita Valor', 
    'DM_Inst SaÃºde Danificadas', 'DM_Inst SaÃºde Destruidas', 'DM_Inst SaÃºde Valor', 
    'DM_Inst Ensino Danificadas', 'DM_Inst Ensino Destruidas', 'DM_Inst Ensino Valor', 
    'DM_Inst ServiÃ§os Danificadas', 'DM_Inst ServiÃ§os Destruidas', 'DM_Inst ServiÃ§os Valor', 
    'DM_Inst Comuni Danificadas', 'DM_Inst Comuni Destruidas', 'DM_Inst Comuni Valor', 
    'DM_Obras de Infra Danificadas', 'DM_Obras de Infra Destruidas', 'DM_Obras de Infra Valor', 
    'PEPL_Assis_mÃ©d e emergÃªn(R$)', 'PEPL_Abast de Ã¡gua pot(R$)', 
    'PEPL_sist de esgotos sanit(R$)', 'PEPL_Sis limp e rec lixo (R$)', 'PEPL_Sis cont pragas (R$)', 
    'PEPL_distrib energia (R$)', 'PEPL_TelecomunicaÃ§Ãµes (R$)', 'PEPL_Tran loc/reg/l_curso (R$)', 
    'PEPL_Distrib combustÃ­veis(R$)', 'PEPL_SeguranÃ§a pÃºblica (R$)', 'PEPL_Ensino (R$)',
    'PEPR_Agricultura (R$)', 'PEPR_PecuÃ¡ria (R$)', 'PEPR_IndÃºstria (R$)', 'PEPR_ComÃ©rcio (R$)', 
    'PEPR_ServiÃ§os (R$)'
]

df_eventos_2010_2 = df_eventos_2010_2[
    ~(df_eventos_2010_2[colunas_informados] == 0).all(axis=1)
]
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Cell [0;32mIn[1], line 13[0m
[1;32m     11[0m [38;5;28;01mimport[39;00m [38;5;21;01mmatplotlib[39;00m[38;5;21;01m.[39;00m[38;5;21;01mpyplot[39;00m [38;5;28;01mas[39;00m [38;5;21;01mplt[39;00m
[1;32m     12[0m [38;5;28;01mfrom[39;00m [38;5;21;01msklearn[39;00m[38;5;21;01m.[39;00m[38;5;21;01mtree[39;00m [38;5;28;01mimport[39;00m plot_tree
[0;32m---> 13[0m [38;5;28;01mfrom[39;00m [38;5;21;01mtreeinterpreter[39;00m [38;5;28;01mimport[39;00m treeinterpreter [38;5;28;01mas[39;00m ti
[1;32m     14[0m [38;5;28;01mfrom[39;00m [38;5;21;01mimblearn[39;00m[38;5;21;01m.[39;00m[38;5;21;01mover_sampling[39;00m [38;5;28;01mimport[39;00m SMOTE
[1;32m     15[0m [38;5;28;01mfrom[39;00m [38;5;21;01msklearn[39;00m[38;5;21;01m.[39;00m[38;5;21;01mfeature_selection[39;00m [38;5;28;01mimport[39;00m SelectFromModel

[0;31mModuleNotFoundError[0m: No module named 'treeinterpreter'

